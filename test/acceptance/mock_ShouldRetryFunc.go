// Code generated by mockery v2.12.2. DO NOT EDIT.

package acceptance

import (
	test "github.com/snyk/driftctl/test"
	mock "github.com/stretchr/testify/mock"

	testing "testing"

	time "time"
)

// MockShouldRetryFunc is an autogenerated mock type for the ShouldRetryFunc type
type MockShouldRetryFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: result, retryDuration, retryCount
func (_m *MockShouldRetryFunc) Execute(result *test.ScanResult, retryDuration time.Duration, retryCount uint8) bool {
	ret := _m.Called(result, retryDuration, retryCount)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*test.ScanResult, time.Duration, uint8) bool); ok {
		r0 = rf(result, retryDuration, retryCount)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// NewMockShouldRetryFunc creates a new instance of MockShouldRetryFunc. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockShouldRetryFunc(t testing.TB) *MockShouldRetryFunc {
	mock := &MockShouldRetryFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
