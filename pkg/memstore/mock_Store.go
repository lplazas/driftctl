// Code generated by mockery v2.12.2. DO NOT EDIT.

package memstore

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// MockStore is an autogenerated mock type for the Store type
type MockStore struct {
	mock.Mock
}

// Bucket provides a mock function with given fields: _a0
func (_m *MockStore) Bucket(_a0 BucketName) Bucket {
	ret := _m.Called(_a0)

	var r0 Bucket
	if rf, ok := ret.Get(0).(func(BucketName) Bucket); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Bucket)
		}
	}

	return r0
}

// NewMockStore creates a new instance of MockStore. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockStore(t testing.TB) *MockStore {
	mock := &MockStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
