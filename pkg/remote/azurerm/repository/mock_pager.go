// Code generated by mockery v2.12.2. DO NOT EDIT.

package repository

import (
	context "context"
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// mockPager is an autogenerated mock type for the pager type
type mockPager struct {
	mock.Mock
}

// Err provides a mock function with given fields:
func (_m *mockPager) Err() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NextPage provides a mock function with given fields: ctx
func (_m *mockPager) NextPage(ctx context.Context) bool {
	ret := _m.Called(ctx)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context) bool); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// newMockPager creates a new instance of mockPager. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func newMockPager(t testing.TB) *mockPager {
	mock := &mockPager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
