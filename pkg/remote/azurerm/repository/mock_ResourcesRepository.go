// Code generated by mockery v2.12.2. DO NOT EDIT.

package repository

import (
	armresources "github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/resources/armresources"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// MockResourcesRepository is an autogenerated mock type for the ResourcesRepository type
type MockResourcesRepository struct {
	mock.Mock
}

// ListAllResourceGroups provides a mock function with given fields:
func (_m *MockResourcesRepository) ListAllResourceGroups() ([]*armresources.ResourceGroup, error) {
	ret := _m.Called()

	var r0 []*armresources.ResourceGroup
	if rf, ok := ret.Get(0).(func() []*armresources.ResourceGroup); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*armresources.ResourceGroup)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockResourcesRepository creates a new instance of MockResourcesRepository. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockResourcesRepository(t testing.TB) *MockResourcesRepository {
	mock := &MockResourcesRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
