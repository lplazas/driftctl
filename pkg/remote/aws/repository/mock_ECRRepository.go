// Code generated by mockery v2.12.2. DO NOT EDIT.

package repository

import (
	ecr "github.com/aws/aws-sdk-go/service/ecr"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// MockECRRepository is an autogenerated mock type for the ECRRepository type
type MockECRRepository struct {
	mock.Mock
}

// ListAllRepositories provides a mock function with given fields:
func (_m *MockECRRepository) ListAllRepositories() ([]*ecr.Repository, error) {
	ret := _m.Called()

	var r0 []*ecr.Repository
	if rf, ok := ret.Get(0).(func() []*ecr.Repository); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*ecr.Repository)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockECRRepository creates a new instance of MockECRRepository. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockECRRepository(t testing.TB) *MockECRRepository {
	mock := &MockECRRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
