// Code generated by mockery v2.12.2. DO NOT EDIT.

package github

import (
	context "context"
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// MockGithubGraphQLClient is an autogenerated mock type for the GithubGraphQLClient type
type MockGithubGraphQLClient struct {
	mock.Mock
}

// Query provides a mock function with given fields: ctx, q, variables
func (_m *MockGithubGraphQLClient) Query(ctx context.Context, q interface{}, variables map[string]interface{}) error {
	ret := _m.Called(ctx, q, variables)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, interface{}, map[string]interface{}) error); ok {
		r0 = rf(ctx, q, variables)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockGithubGraphQLClient creates a new instance of MockGithubGraphQLClient. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockGithubGraphQLClient(t testing.TB) *MockGithubGraphQLClient {
	mock := &MockGithubGraphQLClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
