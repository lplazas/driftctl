// Code generated by mockery v2.12.2. DO NOT EDIT.

package middlewares

import (
	resource "github.com/snyk/driftctl/pkg/resource"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// MockMiddleware is an autogenerated mock type for the Middleware type
type MockMiddleware struct {
	mock.Mock
}

// Execute provides a mock function with given fields: remoteResources, resourcesFromState
func (_m *MockMiddleware) Execute(remoteResources *[]*resource.Resource, resourcesFromState *[]*resource.Resource) error {
	ret := _m.Called(remoteResources, resourcesFromState)

	var r0 error
	if rf, ok := ret.Get(0).(func(*[]*resource.Resource, *[]*resource.Resource) error); ok {
		r0 = rf(remoteResources, resourcesFromState)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockMiddleware creates a new instance of MockMiddleware. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockMiddleware(t testing.TB) *MockMiddleware {
	mock := &MockMiddleware{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
